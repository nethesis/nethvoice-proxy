#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import agent
import os

# Check if the previus version supoported the NAT scenario
# if not adjust the env variables
if os.getenv("BEHIND_NAT", None) is None:
        agent.set_env("PRIVATE_IP", "")
        agent.set_env("BEHIND_NAT", "false")

# Check if the SERVICE_IP is set, if not configure with the VPN IP address
if os.getenv("SERVICE_IP", None) is None:
    rdb = agent.redis_connect(privileged=False)
    # Get the VPN IP address from the node
    agent.set_env('SERVICE_IP', rdb.hget(f'node/{os.environ["NODE_ID"]}/vpn', 'ip_address'))
    # Get the cluster network
    agent.set_env('SERVICE_NET', rdb.get('cluster/network'))
    # Clean up obsolete env variable
    agent.unset_env('KML_INTERNAL_NETWORK')

# test if the passwords.env is present and if 'POSTGRES_PASSWORD' is present
if not os.path.exists("passwords.env") and os.getenv('POSTGRES_PASSWORD') is not None:
        # create the passwords.env file
        agent.write_envfile("passwords.env", {
                "POSTGRES_PASSWORD": os.environ['POSTGRES_PASSWORD']
        })

        # unset the POSTGRES_PASSWORD
        agent.unset_env('POSTGRES_PASSWORD')
